version: '3.8'

services:
    # Web Server Service
    webserver:
        image: nginx:alpine
        container_name: ${PROJECT_NAME}-webserver
        restart: unless-stopped
        tty: true
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./src:/var/www/api/
            - ./nginx/conf.d/:/etc/nginx/conf.d/
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        depends_on:
            - api
            - db
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        networks:
            - starter_networks
    certbot:
        container_name: ${PROJECT_NAME}-certbot
        image: certbot/certbot
        volumes:
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
        networks:
            - starter_networks
    #Database Service
    db:
        image: mysql:8.0
        container_name: ${PROJECT_NAME}-db
        restart: unless-stopped
        tty: true
        ports:
            - '3306:3306'
        volumes:
            - ./mysql/data:/var/lib/mysql
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        networks:
            - starter_networks

    # phpMyAdmin Service
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: ${PROJECT_NAME}-phpmyadmin
        restart: always
        environment:
            - PMA_HOST=${PMA_HOST}
            - PMA_USER=${PMA_USER}
            - PMA_PASSWORD=${PMA_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        ports:
            - '8080:80'
        links:
            - db:db
        depends_on:
            - db
        networks:
            - starter_networks

    # API Service
    api:
        build:
            args:
                - APP_NAME=${PROJECT_NAME}
                - DB_HOST=${PMA_HOST}
                - DB_DATABASE=${MYSQL_DATABASE}
                - DB_USERNAME=${MYSQL_USER}
                - DB_PASSWORD=${MYSQL_PASSWORD}
            context: .
            dockerfile: Dockerfile.api
        command: 'php artisan serve --host=0.0.0.0'
        container_name: ${PROJECT_NAME}-api
        ports:
            - '8000:8000'
        depends_on:
            - db
        networks:
            - starter_networks

networks:
    starter_networks:
